{"version":3,"sources":["components/Post.module.css","components/NewPost.module.css","components/Home.module.css","utils/publicUrl.js","components/PostPreview.js","components/Home.js","components/Navbar.js","components/NewPost.js","components/Profile.js","components/Post.js","utils/initialStore.js","utils/uniqueId.js","components/App.js","index.js","components/Navbar.module.css","components/PostPreview.module.css"],"names":["module","exports","assetPath","process","PostPreview","props","title","body","post","maxChars","isFullPost","length","substring","likeCount","likes","count","commentCount","comments","handleLike","onLike","id","handleUnlike","onUnlike","className","css","preview_background_expanded","preview_background","color_flex_item","content_flex_item","user_image","src","publicUrl","user","photo","title_divide","like_info","self","onClick","comment_info","expand_flex_item","to","renderExpandButton","Home","posts","store","category","useParams","home_title","sort","a","b","Date","datetime","filter","toLowerCase","map","findUser","findComments","findLikes","Navbar","navbar","navItem","navText","NewPost","history","useHistory","useState","setTitle","text","setText","setCategory","handleCancel","push","onSubmit","e","preventDefault","console","log","onPost","onCancel","form_title","form_container","value","onChange","target","title_input","type","name","placeholder","text_header","Profile","userId","users","u","currentUserId","p","bio","slice","onComment","Post","postId","matchedPost","postLikes","like","some","comment","comments_section","comment_divide","comments_header","i","user_text","user_date","UserType","Category","initialStore","email","zipcode","userType","uniqueId","prefix","valueOf","toString","milliseconds","start","getTime","sleep","App","setStore","addLike","toISOString","concat","removeLike","addComment","basename","path","cat","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.27340541.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"comment_divide\":\"Post_comment_divide__UOWix\",\"comments_section\":\"Post_comments_section__zUxlE\",\"comments_header\":\"Post_comments_header__K8oTG\",\"user\":\"Post_user__SDGuF\",\"user_text\":\"Post_user_text__9YRzn\",\"user_date\":\"Post_user_date__1JNhT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text_header\":\"NewPost_text_header__1JvQ6\",\"form_title\":\"NewPost_form_title__16I2E\",\"title_input\":\"NewPost_title_input__21QkB\",\"form_container\":\"NewPost_form_container__2AtrV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home_title\":\"Home_home_title__3dMtE\"};","\n// utils/publicUrl.js\nexport default (assetPath)=>{\n    return process.env.PUBLIC_URL+assetPath;\n}","import css from './PostPreview.module.css';\nimport {Link} from 'react-router-dom';\nimport publicUrl from '../utils/publicUrl';\n\nfunction PostPreview(props) {\n\n    // key, user, post, comments, likes, onLike, onUnlike, onComment\n    const post = props.post;\n    const maxChars = 100;\n\n    // placeholder title and body which will be shrunk if we're in preview mode\n    let title;\n    let body;\n\n    if(props.isFullPost) {\n        title = post.title;\n        body = post.body;\n    }\n    else {\n        title = post.title.length > maxChars ? post.title.substring(0, maxChars - 4) + \"...\" : post.title;\n        body = post.body.length > maxChars ? post.body.substring(0, maxChars - 4) + \"...\" : post.body;\n    }\n\n    // get num of likes, num of comments\n    let likeCount = props.likes.count;\n    let commentCount = props.comments.length;\n\n    function handleLike() {\n        props.onLike(post.id);\n    }\n\n    function handleUnlike() {\n        props.onUnlike(post.id);\n    }\n\n    // renders like icon, which can be \"liked\" or \"unliked\"\n    function renderLikeIcon() {\n        if(props.likes.self) {\n            return (\n                <i className=\"fas fa-heart\" onClick={handleUnlike}></i>\n            );\n        }\n        else {\n            return (\n                <i className=\"far fa-heart\" onClick={handleLike}></i>\n            );\n        }\n    }\n\n    function findPreviewType() {\n        if(!props.isFullPost) {\n            return css.preview_background;\n        } else {\n            return css.preview_background_expanded;\n        }\n    }\n\n    function renderExpandButton() {\n        if(!props.isFullPost) {\n            return (\n              <Link to= {\"/post/\" + post.id}>\n                  <i className=\"fas fa-angle-right fa-2x arrow\"></i>\n              </Link>\n            )\n        } \n    }\n\n    return (\n        <div>\n            <div className={findPreviewType()}>\n                {/* FIRST COLUMN: COLOR */}\n                <div className={css.color_flex_item}></div>\n\n                {/* SECOND COLUMN: CONTENT */}\n                <div className={css.content_flex_item}>\n                    {/* user icon and title section */}\n                    <section>\n                        <img className={css.user_image} src={publicUrl(props.user.photo)}></img>\n                        <b>\n                            <p className={css.title}>{title}</p>\n                        </b>\n                    </section>\n\n                    <hr className={css.title_divide}></hr>\n\n                    {/* body preview section */}\n                    <section>\n                        <p>{body}</p>\n                    </section>\n\n                    {/* likes and comments */}\n                    <section>\n                        <div className={css.like_info}>\n                            <span>{likeCount}</span>\n                            {renderLikeIcon()}\n                        </div>\n\n                        <div className={css.comment_info}>\n                            <span>{commentCount}</span>\n                            <i className=\"fas fa-comment\"></i>\n                        </div>\n                    </section>\n\n\n                </div>\n                {/* THIRD COLUMN: EXPAND POST BUTTON */}\n                <div className={css.expand_flex_item}>\n                    {renderExpandButton()}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default PostPreview;\n","import React from 'react';\nimport PostPreview from './PostPreview';\nimport {useParams} from 'react-router-dom';\nimport css from './Home.module.css';\n\nfunction Home(props) {\n\n    const posts = props.store.posts;\n\n    let {category} = useParams();\n\n    // stacked posts, sorted by time published\n    return (\n        <div>\n            <p className={css.home_title}>Your Feed</p>\n            {posts\n                .sort((a,b)=>new Date(b.datetime) - new Date(a.datetime))\n                // post filtering by topic\n                .filter(post => {\n                    if(category) {\n                        return category.toLowerCase() == post.category.toLowerCase();\n                    }\n                    else {\n                        return true;\n                    }\n                })\n                // iterate through posts\n                .map(post =>\n                    <PostPreview\n                        key={post.id}\n                        user={props.findUser(post)}\n                        post={post}\n                        comments={props.findComments(post)}\n                        likes={props.findLikes(post)}\n                        onLike={props.onLike}\n                        onUnlike={props.onUnlike}\n                        isFullPost={false}\n                    />\n                )\n            }\n        </div>\n    );\n\n}\n\nexport default Home;\n","import React from 'react';\nimport css from './Navbar.module.css';\nimport {\n    Link\n} from \"react-router-dom\";\n\nfunction Navbar() {\n    return (\n        <nav className={css.navbar}>\n            {/* home */}\n            <div className={css.navItem}>\n                <Link to=\"/\">\n                    <button>\n                        <i className=\"fas fa-home\"></i>\n                    </button>\n                </Link>\n                <p className={css.navText}>Home</p>\n            </div>\n            {/* new post */}\n            <div className={css.navItem}>\n                <Link to=\"/newpost\">\n                    <button>\n                        <i className=\"fas fa-plus-square\"></i>\n                    </button>\n                </Link>\n                <p className={css.navText}>New Post</p>\n            </div>\n            {/* water */}\n            <div className={css.navItem}>\n                <Link to=\"/category/water\">\n                    <button>\n                        <i className=\"fas fa-tint\"></i>\n                    </button>\n                </Link>\n                <p className={css.navText}>Water</p>\n            </div>\n            {/* food */}\n            <div className={css.navItem}>\n                <Link to=\"/category/food\">\n                    <button>\n                        <i className=\"fas fa-utensils\"></i>\n                    </button>\n                </Link>\n                <p className={css.navText}>Food</p>\n            </div>\n            {/* housing */}\n            <div className={css.navItem}>\n                <Link to=\"/category/housing\">\n                    <button>\n                        <i className=\"fas fa-warehouse\"></i>\n                    </button>\n                </Link>\n                <p className={css.navText}>Housing</p>\n            </div>\n        </nav>\n    );\n}\n\nexport default Navbar;\n","import {useState} from \"react\"\nimport {useHistory} from \"react-router-dom\";\nimport css from './NewPost.module.css';\n\nfunction NewPost(props) {\n\n    const history = useHistory();\n    const [title, setTitle] = useState('');\n    const [text, setText] = useState('');\n    const [category, setCategory] = useState('');\n    // const [error, setError] = useState('');\n\n    function handleTitle(e) {\n        setTitle(e.target.value)\n    }\n\n    function handleText(e) {\n        setText(e.target.value);\n    }\n\n    function handleCategory(e) {\n        setCategory(e.target.value);\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        if(title === '' || text === '' || category === '') { return; }\n        console.log('posting');\n        props.onPost(title, text, category);\n        history.push(\"/\");\n    }\n\n    function handleCancel() {\n        history.push(\"/\");\n    }\n\n    return (\n        <form onSubmit={handleSubmit} onCancel={handleCancel}>\n          <p className={css.form_title}>New Post</p>\n            <div className={css.form_container}>\n                <label>\n                    Choose a category:\n                    <select value={category} onChange={handleCategory}>\n                        <option value=\"water\">Water</option>\n                        <option value=\"food\">Food</option>\n                        <option value=\"housing\">Housing</option>\n                    </select>\n                </label>\n                <label>\n                    Title:\n                    <input className={css.title_input}\n                        type=\"title\"\n                        name=\"title\"\n                        placeholder=\"title\"\n                        value={title}\n                        onChange={handleTitle}\n                    />\n                </label>\n                <label>\n                    <p className={css.text_header}>What's Going On?</p>\n                    <textarea\n                        type=\"text\"\n                        name=\"text\"\n                        placeholder=\"text\"\n                        value={text}\n                        onChange={handleText}\n                    />\n                </label>\n                <input type=\"submit\" value=\"Submit\" />\n                <button onClick={handleCancel}>Cancel</button>\n            </div>\n        </form>\n\n\n\n    );\n}\n\nexport default NewPost;\n","import { useParams, useHistory} from \"react-router-dom\";\nimport PostPreview from \"./PostPreview\";\n\n\nfunction Profile(props) {\n\n    const history = useHistory();\n\n    let user;\n\n    let {userId} = useParams();\n\n    if(userId) {\n        // match on the param given\n        let potentialUser = props.store.users.filter(u => u.id === userId)[0];\n\n        // if matching on undefined...leave this url\n        if(!potentialUser) {\n            // push to home\n            history.push(\"/\");\n            // return nothing from this component\n            return null;\n        }\n    }\n    else {\n        user = props.store.users.filter(u => u.id === props.store.currentUserId)[0];\n    }\n\n    // user is now defined so we can grab posts\n    const posts = props.store.posts.filter(p => p.userId === user.id);\n\n    return (\n        <div>\n            {/* user info */}\n            <section>\n                {/* photo and user id */}\n                <div>\n                    <p>{user.photo}</p>\n                    <p>{user.id}</p>\n                </div>\n\n                {/* bio */}\n                <div>\n                    <p>{user.bio}</p>\n                </div>\n            </section>\n\n            {/* user recent posts? */}\n            <section>\n                Recent Posts:\n                {\n                    posts\n                        .sort((a,b)=>new Date(b.datetime) - new Date(a.datetime))\n                        .slice(0, 3)\n                        .map(p =>\n                            <PostPreview\n                                key={p.id}\n                                user={user}\n                                post={p}\n                                comments={props.findComments(p)}\n                                likes={props.findLikes(p)}\n                                onLike={props.onLike}\n                                onUnlike={props.onUnlike}\n                                onComment={props.onComment}\n                                isFullPost={false}\n                            />\n                    )\n                }\n            </section>\n\n\n\n        </div>\n    );\n}\n\nexport default Profile;\n","import {useParams} from 'react-router-dom';\nimport PostPreview from './PostPreview';\nimport css from './Post.module.css';\nimport publicUrl from '../utils/publicUrl';\n\nfunction Post(props) {\n\n    let {postId} = useParams();\n    console.log(postId);\n\n    function findComments(p) {\n        return props.store.comments.filter(comment => comment.postId === p.id)\n    }\n\n    function findLikes(p) {\n        let postLikes = props.store.likes.filter(like => like.postId === p.id);\n\n        return {\n            self: postLikes.some(like => like.userId === props.store.currentUserId),\n            count: postLikes.length\n        }\n    }\n\n    let matchedPost = props.store.posts.filter(p => p.id===postId)[0];\n    if (!matchedPost) return (<p>404: Could not find post</p>);\n\n    const post = matchedPost;\n    const likes = findLikes(post);\n    const comments = findComments(post);\n\n    return (\n        <div>\n            {/* use post preview and pass in isFullPost as true */}\n            <PostPreview\n                key={post.id}\n                user={post.userId}\n                post={post}\n                comments={comments}\n                likes={likes}\n                onLike={props.onLike}\n                onUnlike={props.onUnlike}\n                onComment={props.onComment}\n                isFullPost={true}\n            />\n             <div className={css.comments_section}>\n                <hr className={css.comment_divide}></hr>\n                <p className={css.comments_header}>Comments:</p>\n\n                    {\n                        comments.map((comment, i) => {\n                            return(\n                                <div key={i}>\n                                    <img className={css.user_image} src={publicUrl(\"/assets/default.png\")}></img>\n                                    <p className={css.user}>{comment.userId}</p>\n                                    <p className={css.user_text}>{comment.text}</p>\n                                    <p className={css.user_date}>{comment.datetime}</p>\n                                </div>\n                            );\n                        })\n                    }\n\n                </div>\n             </div>\n    )\n\n}\n\nexport default Post;\n","\n// define a user type\nconst UserType = {\n    User: \"User\",\n    Organization: \"Organization\",\n    Moderator: \"Moderator\"\n}\n\n// define a category type\nconst Category = {\n    Water: \"Water\",\n    Housing: \"Housing\",\n    Food: \"Food\",\n    None: \"None\"\n}\n\nlet initialStore = {\n    currentUserId: \"anthony\",\n    users: [\n        {\n            id: \"anthony\",\n            email: \"anthony@bc.edu\",\n            type: UserType.User,\n            name: \"Anthony Stevens\",\n            bio: \"\",\n            photo: \"/assets/default.png\",\n            zipcode: \"33764\"\n        },\n        {\n            id: \"bosfoodbank\",\n            email: \"bosfood@foodbank.org\",\n            type: UserType.Organization,\n            name: \"The Greater Boston Food Bank\",\n            bio: \"Together, we can end hunger here\",\n            photo: \"/assets/default.png\",\n            zipcode: \"02111\"\n        },\n        {\n            id: \"saundra\",\n            email: \"saundra@gmail.com\",\n            type: UserType.User,\n            name: \"Saundra Mills\",\n            bio: \"\",\n            photo: \"/assets/default.png\",\n            zipcode: \"02118\"\n        }\n    ],\n    posts: [\n        {\n            id: \"post-1\",\n            userId: \"anthony\",\n            userType: UserType.User,\n            title: \"Food banks in the area?\",\n            body: \"I'm looking for food banks nearby. Does anyone know where I can find one?\",\n            category: Category.Food,\n            datetime: \"2020-02-09T22:45:28Z\"\n        },\n        {\n            id: \"post-2\",\n            userId: \"saundra\",\n            userType: UserType.User,\n            title: \"I can't get clean water lately\",\n            body: \"Does anyone know where I can get free gallons of water?\",\n            category: Category.Water,\n            datetime: \"2020-03-09T22:45:28Z\"\n        },\n        {\n            id: \"post-3\",\n            userId: \"bosfoodbank\",\n            userType: UserType.Organization,\n            title: \"We're Relocating!\",\n            body: \"You can find our new address at our website: https://www.gbfb.org/\",\n            category: Category.Food,\n            datetime: \"2020-04-09T22:45:28Z\"\n        }\n    ],\n    comments: [\n        {\n            userId:\"bosfoodbank\",\n            postId:\"post-1\",\n            text:\"Check out our website! https://www.gbfb.org/\",\n            datetime:\"2020-02-09T22:51:40Z\"\n        },\n        {\n            userId:\"anthony\",\n            postId:\"post-1\",\n            text:\"Thanks!\",\n            datetime:\"2020-02-09T22:53:40Z\"\n        },\n        {\n            userId:\"saundra\",\n            postId:\"post-3\",\n            text:\"This is a bit far from me now. What's going to happen to the old location?\",\n            datetime:\"2020-02-09T22:54:40Z\"\n        }\n    ],\n    likes: [\n        {\n            userId:\"anthony\",\n            postId:\"post-1\",\n            datetime:\"2020-02-09T22:45:28Z\"\n        },\n    ]\n\n}\n\nexport default initialStore;\n","  \nfunction sleep(milliseconds) {\n\tvar start = new Date().getTime();\n\tfor (var i = 0; i < 1e7; i++) {\n\t\tif ((new Date().getTime() - start) > milliseconds){\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nfunction uniqueId(prefix) {\n\tlet id = new Date().valueOf().toString(36);\n\tsleep(1);// wait for one millisecond\n\treturn (prefix ? prefix + id\t: id);\n}\n\nexport default uniqueId;","\n// react\nimport {useState} from 'react';\n// components\nimport Home from './Home';\nimport Navbar from './Navbar';\nimport NewPost from './NewPost';\nimport Profile from './Profile';\nimport Post from './Post';\n// import Login from 'Login';\nimport './App.css';\n// data from the initial store\nimport initialStore from '../utils/initialStore';\n// utils\nimport uniqueId from '../utils/uniqueId';\n// react router\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nfunction App() {\n\n  const [store, setStore] = useState(initialStore);\n\n  // add like\n  function addLike(postId) {\n\n    // define like object\n    const like = {\n      userId: store.currentUserId,\n      postId: postId,\n      datetime: new Date().toISOString()\n    }\n\n    // append new like to store\n    setStore({\n      ...store,\n      likes: store.likes.concat(like)\n    })\n\n  }\n\n  // remove like\n  function removeLike(postId) {\n\n    // filter likes!\n    setStore({\n      ...store,\n      likes: store.likes.filter(like => !(store.currentUserId === like.userId && like.postId === postId))\n    })\n  }\n\n  // add post given a title, body, and category\n  function addPost(title, body, cat) {\n    const post = {\n      id: uniqueId(),\n      userId: store.currentUserId,\n      title: title,\n      body: body,\n      category: cat,\n      datetime: new Date().toISOString()\n    }\n\n    setStore({\n      ...store,\n      posts: store.posts.concat(post)\n    })\n  }\n\n  // add comment\n  function addComment(postId, text) {\n\n    // create a new comment\n    const comment = {\n      userId: store.currentUserId,\n      postId: postId,\n      text: text,\n      datetime: new Date().toISOString()\n    };\n\n    setStore({\n      ...store,\n      comments: store.comments.concat(comment)\n    });\n  }\n\n  // find users, find comments, and find likes\n  // given some post, fetch the user\n  function findUser(post) {\n    return store.users.filter(user => user.id === post.id)\n  }\n\n  // given some post, fetch the comments\n  function findComments(post) {\n      return store.comments.filter(comment => comment.postId === post.id)\n  }\n\n  // given some post, fetch the likes\n  function findLikes(post) {\n      let postLikes = store.likes.filter(like => like.postId === post.id);\n\n      return {\n          self: postLikes.some(like => like.userId === store.currentUserId),\n          count: postLikes.length\n      }\n  }\n\n  return (\n    <div className=\"App\">\n      {/* routing */}\n      <Router basename={process.env.PUBLIC_URL}>\n        {/* switch */}\n        <Switch>\n\n          {/* filter on a category */}\n          <Route path=\"/category/:category?\">\n            <Home store={store}\n                  onLike={addLike}\n                  onUnlike={removeLike}\n                  findUser={findUser}\n                  findLikes={findLikes}\n                  findComments={findComments}\n            />\n          </Route>\n\n          {/* go to new post */}\n          <Route path=\"/newpost\">\n            <NewPost \n              store={store}\n              onPost={addPost}\n            />\n          </Route>\n\n          {/* go to profile */}\n          <Route path=\"/profile/:userId?\">\n            <Profile\n              store={store}\n              onLike={addLike}\n              onUnlike={removeLike}\n              findLikes={findLikes}\n              findComments={findComments}\n            />\n          </Route>\n\n          {/* open a post */}\n          <Route path=\"/post/:postId?\">\n            <Post\n              store={store}\n              onLike={addLike}\n              onUnlike={removeLike}\n              onComment={addComment}\n            />\n          </Route>\n\n          {/* go to home */}\n          <Route exact path=\"/\">\n            <Home store={store}\n                  onLike={addLike}\n                  onUnlike={removeLike}\n                  onComment={addComment}\n                  findUser={findUser}\n                  findLikes={findLikes}\n                  findComments={findComments}\n            />\n          </Route>\n\n        </Switch>\n\n        {/* navbar */}\n        <Navbar/>\n      </Router>\n\n\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__31-FB\",\"navItem\":\"Navbar_navItem__2xPHq\",\"navText\":\"Navbar_navText__3iYMW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preview_background\":\"PostPreview_preview_background__2J9m_\",\"preview_background_expanded\":\"PostPreview_preview_background_expanded__O1xHH\",\"user_image\":\"PostPreview_user_image__oqjgv\",\"title\":\"PostPreview_title__2QhDq\",\"title_divide\":\"PostPreview_title_divide__Ytvkf\",\"like_info\":\"PostPreview_like_info__YOFZR\",\"comment_info\":\"PostPreview_comment_info__1_feI\",\"color_flex_item\":\"PostPreview_color_flex_item__1ybdU\",\"content_flex_item\":\"PostPreview_content_flex_item__1sugn\",\"expand_flex_item\":\"PostPreview_expand_flex_item__2-XKe\"};"],"sourceRoot":""}